"""auto

Revision ID: 590a93bc17d8
Revises: 3faf8870dc90
Create Date: 2025-04-17 03:10:21.731624

"""

from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "590a93bc17d8"
down_revision: Union[str, None] = "3faf8870dc90"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "trade_execution_results",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("exchange_id", sa.Integer(), nullable=False),
        sa.Column("trading_pair_id", sa.Integer(), nullable=False),
        sa.Column("side", sa.String(), nullable=False),
        sa.Column("order_type", sa.String(), nullable=False),
        sa.Column("requested_amount", sa.Numeric(precision=18, scale=8), nullable=False),
        sa.Column("executed_amount", sa.Numeric(precision=18, scale=8), nullable=False),
        sa.Column("price", sa.Numeric(precision=18, scale=8), nullable=True),
        sa.Column("average_price", sa.Numeric(precision=18, scale=8), nullable=True),
        sa.Column("status", sa.String(), nullable=False),
        sa.Column("timestamp", sa.TIMESTAMP(), nullable=False),
        sa.Column("fees", sa.JSON(), nullable=True),
        sa.Column("trade_id", sa.String(), nullable=True),
        sa.Column("order_id", sa.String(), nullable=True),
        sa.Column("error", sa.String(), nullable=True),
        sa.Column("raw_response", sa.JSON(), nullable=True),
        sa.Column("strategy_id", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.TIMESTAMP(), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=True),
        sa.Column("trade_execution_id", sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(
            ["exchange_id"],
            ["exchanges.id"],
        ),
        sa.ForeignKeyConstraint(
            ["strategy_id"],
            ["strategies.id"],
        ),
        sa.ForeignKeyConstraint(
            ["trade_execution_id"],
            ["trade_executions.id"],
        ),
        sa.ForeignKeyConstraint(
            ["trading_pair_id"],
            ["trading_pairs.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "orders",
        sa.Column("id", sa.String(), nullable=False),
        sa.Column("exchange_id", sa.Integer(), nullable=False),
        sa.Column("trading_pair_id", sa.Integer(), nullable=False),
        sa.Column("side", sa.String(), nullable=False),
        sa.Column("order_type", sa.String(), nullable=False),
        sa.Column("price", sa.Numeric(precision=18, scale=8), nullable=True),
        sa.Column("amount", sa.Numeric(precision=18, scale=8), nullable=False),
        sa.Column("filled", sa.Numeric(precision=18, scale=8), server_default=sa.text("0"), nullable=True),
        sa.Column("remaining", sa.Numeric(precision=18, scale=8), nullable=True),
        sa.Column("status", sa.String(), nullable=False),
        sa.Column("timestamp", sa.TIMESTAMP(), nullable=False),
        sa.Column("average_price", sa.Numeric(precision=18, scale=8), nullable=True),
        sa.Column("fees", sa.JSON(), nullable=True),
        sa.Column("raw_response", sa.JSON(), nullable=True),
        sa.Column("strategy_id", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.TIMESTAMP(), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=True),
        sa.ForeignKeyConstraint(
            ["exchange_id"],
            ["exchanges.id"],
        ),
        sa.ForeignKeyConstraint(
            ["strategy_id"],
            ["strategies.id"],
        ),
        sa.ForeignKeyConstraint(
            ["trading_pair_id"],
            ["trading_pairs.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.add_column("exchanges", sa.Column("api_key", sa.String(), nullable=True))
    op.add_column("exchanges", sa.Column("api_secret", sa.String(), nullable=True))
    op.add_column("exchanges", sa.Column("paper_trading", sa.Boolean(), server_default=sa.text("true"), nullable=True))
    op.add_column("exchanges", sa.Column("has_websocket", sa.Boolean(), server_default=sa.text("false"), nullable=True))
    op.add_column("exchanges", sa.Column("has_rest", sa.Boolean(), server_default=sa.text("true"), nullable=True))
    op.add_column(
        "exchanges", sa.Column("has_private_api", sa.Boolean(), server_default=sa.text("false"), nullable=True)
    )
    op.add_column("exchanges", sa.Column("status", sa.String(), server_default=sa.text("'online'"), nullable=True))
    op.add_column("exchanges", sa.Column("version", sa.String(), nullable=True))
    op.add_column("exchanges", sa.Column("description", sa.String(), nullable=True))
    op.add_column("order_book_snapshots", sa.Column("exchange_id", sa.Integer(), nullable=False))
    op.add_column("order_book_snapshots", sa.Column("trading_pair_id", sa.Integer(), nullable=False))
    op.add_column("order_book_snapshots", sa.Column("sequence", sa.Integer(), nullable=True))
    op.add_column("order_book_snapshots", sa.Column("hash_value", sa.String(), nullable=True))
    op.create_foreign_key(None, "order_book_snapshots", "trading_pairs", ["trading_pair_id"], ["id"])
    op.create_foreign_key(None, "order_book_snapshots", "exchanges", ["exchange_id"], ["id"])
    op.add_column("trade_executions", sa.Column("profit", sa.Numeric(precision=18, scale=8), nullable=True))
    op.add_column(
        "trade_executions", sa.Column("status", sa.String(), server_default=sa.text("'completed'"), nullable=True)
    )
    op.add_column("trade_executions", sa.Column("buy_execution_result_id", sa.UUID(), nullable=True))
    op.add_column("trade_executions", sa.Column("sell_execution_result_id", sa.UUID(), nullable=True))
    op.create_foreign_key(None, "trade_executions", "trade_execution_results", ["buy_execution_result_id"], ["id"])
    op.create_foreign_key(None, "trade_executions", "trade_execution_results", ["sell_execution_result_id"], ["id"])
    op.add_column("trade_opportunities", sa.Column("opportunity_key", sa.String(), nullable=True))
    op.add_column(
        "trading_pairs",
        sa.Column("min_qty", sa.Numeric(precision=18, scale=8), server_default=sa.text("0"), nullable=True),
    )
    op.add_column(
        "trading_pairs",
        sa.Column("max_qty", sa.Numeric(precision=18, scale=8), server_default=sa.text("0"), nullable=True),
    )
    op.add_column(
        "trading_pairs", sa.Column("price_precision", sa.Integer(), server_default=sa.text("8"), nullable=True)
    )
    op.add_column("trading_pairs", sa.Column("qty_precision", sa.Integer(), server_default=sa.text("8"), nullable=True))
    op.add_column(
        "trading_pairs",
        sa.Column("min_notional", sa.Numeric(precision=18, scale=8), server_default=sa.text("0"), nullable=True),
    )
    op.add_column("trading_pairs", sa.Column("enabled", sa.Boolean(), server_default=sa.text("true"), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("trading_pairs", "enabled")
    op.drop_column("trading_pairs", "min_notional")
    op.drop_column("trading_pairs", "qty_precision")
    op.drop_column("trading_pairs", "price_precision")
    op.drop_column("trading_pairs", "max_qty")
    op.drop_column("trading_pairs", "min_qty")
    op.drop_column("trade_opportunities", "opportunity_key")
    op.drop_constraint(None, "trade_executions", type_="foreignkey")
    op.drop_constraint(None, "trade_executions", type_="foreignkey")
    op.drop_column("trade_executions", "sell_execution_result_id")
    op.drop_column("trade_executions", "buy_execution_result_id")
    op.drop_column("trade_executions", "status")
    op.drop_column("trade_executions", "profit")
    op.drop_constraint(None, "order_book_snapshots", type_="foreignkey")
    op.drop_constraint(None, "order_book_snapshots", type_="foreignkey")
    op.drop_column("order_book_snapshots", "hash_value")
    op.drop_column("order_book_snapshots", "sequence")
    op.drop_column("order_book_snapshots", "trading_pair_id")
    op.drop_column("order_book_snapshots", "exchange_id")
    op.drop_column("exchanges", "description")
    op.drop_column("exchanges", "version")
    op.drop_column("exchanges", "status")
    op.drop_column("exchanges", "has_private_api")
    op.drop_column("exchanges", "has_rest")
    op.drop_column("exchanges", "has_websocket")
    op.drop_column("exchanges", "paper_trading")
    op.drop_column("exchanges", "api_secret")
    op.drop_column("exchanges", "api_key")
    op.drop_table("orders")
    op.drop_table("trade_execution_results")
    # ### end Alembic commands ###

"""auto

Revision ID: 3faf8870dc90
Revises:
Create Date: 2025-04-11 23:49:31.230657

"""

from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "3faf8870dc90"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "exchanges",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("api_rate_limit", sa.Integer(), nullable=True),
        sa.Column("trade_fees", sa.Numeric(precision=18, scale=8), nullable=True),
        sa.Column("rest_url", sa.String(), nullable=True),
        sa.Column("ws_url", sa.String(), nullable=True),
        sa.Column("delimiter", sa.String(), nullable=True),
        sa.Column("withdrawal_fee", sa.JSON(), nullable=True),
        sa.Column("api_response_time", sa.Integer(), nullable=True),
        sa.Column("mapping", sa.JSON(), nullable=True),
        sa.Column("additional_info", sa.JSON(), nullable=True),
        sa.Column("is_active", sa.Boolean(), server_default=sa.text("false"), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "execution_strategies",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("timeout", sa.Integer(), nullable=False),
        sa.Column("retry_attempts", sa.Integer(), server_default=sa.text("2"), nullable=False),
        sa.Column("parameters", sa.JSON(), nullable=True),
        sa.Column("created_at", sa.TIMESTAMP(), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=True),
        sa.Column("updated_at", sa.TIMESTAMP(), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "order_book_snapshots",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("timestamp", sa.TIMESTAMP(), nullable=False),
        sa.Column("data", sa.JSON(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "risk_profiles",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("max_position_size_percentage", sa.Numeric(precision=5, scale=2), nullable=True),
        sa.Column("max_drawdown_percentage", sa.Numeric(precision=5, scale=2), nullable=True),
        sa.Column("max_exposure_per_asset_percentage", sa.Numeric(precision=5, scale=2), nullable=True),
        sa.Column("circuit_breaker_conditions", sa.JSON(), nullable=True),
        sa.Column("created_at", sa.TIMESTAMP(), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=True),
        sa.Column("updated_at", sa.TIMESTAMP(), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "strategy_types",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("implementation_class", sa.String(), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "system_health_checks",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("timestamp", sa.TIMESTAMP(), nullable=False),
        sa.Column("database_healthy", sa.Boolean(), nullable=False),
        sa.Column("redis_healthy", sa.Boolean(), nullable=False),
        sa.Column("exchanges", sa.JSON(), nullable=False),
        sa.Column("overall_health", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "trading_pairs",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("base_currency", sa.String(), nullable=False),
        sa.Column("quote_currency", sa.String(), nullable=False),
        sa.Column("symbol", sa.String(), nullable=False),
        sa.Column("is_active", sa.Boolean(), server_default=sa.text("false"), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("base_currency", "quote_currency", name="uix_pair_base_quote"),
        sa.UniqueConstraint("symbol"),
    )
    op.create_table(
        "strategies",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("strategy_type_id", sa.Integer(), nullable=False),
        sa.Column("risk_profile_id", sa.Integer(), nullable=False),
        sa.Column("starting_capital", sa.Numeric(precision=18, scale=2), nullable=False),
        sa.Column("total_profit", sa.Numeric(precision=18, scale=2), server_default=sa.text("0"), nullable=False),
        sa.Column("total_loss", sa.Numeric(precision=18, scale=2), server_default=sa.text("0"), nullable=False),
        sa.Column("net_profit", sa.Numeric(precision=18, scale=2), server_default=sa.text("0"), nullable=False),
        sa.Column("trade_count", sa.Integer(), server_default=sa.text("0"), nullable=False),
        sa.Column("start_timestamp", sa.TIMESTAMP(), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=True),
        sa.Column("last_updated", sa.TIMESTAMP(), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=True),
        sa.Column("is_active", sa.Boolean(), server_default=sa.text("false"), nullable=False),
        sa.Column("created_by", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["risk_profile_id"],
            ["risk_profiles.id"],
        ),
        sa.ForeignKeyConstraint(
            ["strategy_type_id"],
            ["strategy_types.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "market_condition_performance",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("strategy_id", sa.Integer(), nullable=False),
        sa.Column("market_condition", sa.String(), nullable=False),
        sa.Column("exchange_id", sa.Integer(), nullable=False),
        sa.Column("trading_pair_id", sa.Integer(), nullable=False),
        sa.Column("trade_count", sa.Integer(), server_default=sa.text("0"), nullable=False),
        sa.Column("profit", sa.Numeric(precision=18, scale=2), server_default=sa.text("0"), nullable=False),
        sa.Column("win_rate", sa.Numeric(precision=5, scale=2), server_default=sa.text("0"), nullable=False),
        sa.Column(
            "avg_profit_per_trade", sa.Numeric(precision=18, scale=2), server_default=sa.text("0"), nullable=False
        ),
        sa.Column("created_at", sa.TIMESTAMP(), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=True),
        sa.Column("updated_at", sa.TIMESTAMP(), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=True),
        sa.ForeignKeyConstraint(
            ["exchange_id"],
            ["exchanges.id"],
        ),
        sa.ForeignKeyConstraint(
            ["strategy_id"],
            ["strategies.id"],
        ),
        sa.ForeignKeyConstraint(
            ["trading_pair_id"],
            ["trading_pairs.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "strategy_id", "market_condition", "exchange_id", "trading_pair_id", name="uix_strategy_market_perf"
        ),
    )
    op.create_table(
        "strategy_exchange_pair_mappings",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("strategy_id", sa.Integer(), nullable=False),
        sa.Column("exchange_id", sa.Integer(), nullable=False),
        sa.Column("trading_pair_id", sa.Integer(), nullable=False),
        sa.Column("is_active", sa.Boolean(), server_default=sa.text("true"), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=True),
        sa.Column("updated_at", sa.TIMESTAMP(), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=True),
        sa.ForeignKeyConstraint(
            ["exchange_id"],
            ["exchanges.id"],
        ),
        sa.ForeignKeyConstraint(
            ["strategy_id"],
            ["strategies.id"],
        ),
        sa.ForeignKeyConstraint(
            ["trading_pair_id"],
            ["trading_pairs.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("strategy_id", "exchange_id", "trading_pair_id", name="uix_strat_exchange_pair"),
    )
    op.create_table(
        "strategy_execution_mapping",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("strategy_id", sa.Integer(), nullable=False),
        sa.Column("execution_strategy_id", sa.Integer(), nullable=False),
        sa.Column("is_active", sa.Boolean(), server_default=sa.text("true"), nullable=False),
        sa.Column("priority", sa.Integer(), server_default=sa.text("100"), nullable=False),
        sa.Column("created_at", sa.TIMESTAMP(), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=True),
        sa.ForeignKeyConstraint(
            ["execution_strategy_id"],
            ["execution_strategies.id"],
        ),
        sa.ForeignKeyConstraint(
            ["strategy_id"],
            ["strategies.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("strategy_id", "execution_strategy_id", name="uix_strategy_execution"),
    )
    op.create_table(
        "strategy_metrics",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("strategy_id", sa.Integer(), nullable=False),
        sa.Column("period_start", sa.DateTime(), nullable=False),
        sa.Column("period_end", sa.DateTime(), nullable=False),
        sa.Column("win_count", sa.Integer(), server_default=sa.text("0"), nullable=False),
        sa.Column("loss_count", sa.Integer(), server_default=sa.text("0"), nullable=False),
        sa.Column("win_rate", sa.Numeric(precision=5, scale=2), server_default=sa.text("0"), nullable=False),
        sa.Column("gross_profit", sa.Numeric(precision=18, scale=2), server_default=sa.text("0"), nullable=False),
        sa.Column("gross_loss", sa.Numeric(precision=18, scale=2), server_default=sa.text("0"), nullable=False),
        sa.Column("net_profit", sa.Numeric(precision=18, scale=2), server_default=sa.text("0"), nullable=False),
        sa.Column("profit_factor", sa.Numeric(precision=8, scale=4), server_default=sa.text("0"), nullable=False),
        sa.Column("max_drawdown", sa.Numeric(precision=18, scale=2), server_default=sa.text("0"), nullable=False),
        sa.Column(
            "max_drawdown_percentage", sa.Numeric(precision=5, scale=2), server_default=sa.text("0"), nullable=False
        ),
        sa.Column(
            "avg_profit_per_trade", sa.Numeric(precision=18, scale=2), server_default=sa.text("0"), nullable=False
        ),
        sa.Column("avg_loss_per_trade", sa.Numeric(precision=18, scale=2), server_default=sa.text("0"), nullable=False),
        sa.Column("risk_reward_ratio", sa.Numeric(precision=8, scale=4), server_default=sa.text("0"), nullable=False),
        sa.Column("total_volume", sa.Numeric(precision=18, scale=8), server_default=sa.text("0"), nullable=False),
        sa.Column(
            "avg_volume_per_trade", sa.Numeric(precision=18, scale=8), server_default=sa.text("0"), nullable=False
        ),
        sa.Column("avg_hold_time_seconds", sa.Integer(), server_default=sa.text("0"), nullable=False),
        sa.Column("market_volatility", sa.Numeric(precision=8, scale=4), nullable=True),
        sa.Column("correlation_to_market", sa.Numeric(precision=5, scale=2), nullable=True),
        sa.Column("created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=True),
        sa.Column("updated_at", sa.DateTime(), server_default=sa.text("now()"), nullable=True),
        sa.ForeignKeyConstraint(
            ["strategy_id"],
            ["strategies.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "strategy_parameters",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("strategy_id", sa.Integer(), nullable=False),
        sa.Column("min_spread", sa.Numeric(precision=18, scale=8), nullable=False),
        sa.Column("threshold", sa.Numeric(precision=18, scale=8), nullable=False),
        sa.Column("max_slippage", sa.Numeric(precision=18, scale=8), nullable=True),
        sa.Column("min_volume", sa.Numeric(precision=18, scale=8), nullable=True),
        sa.Column("max_execution_time_ms", sa.Integer(), nullable=True),
        sa.Column("additional_parameters", sa.JSON(), nullable=True),
        sa.Column("created_at", sa.TIMESTAMP(), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=True),
        sa.Column("updated_at", sa.TIMESTAMP(), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=True),
        sa.ForeignKeyConstraint(
            ["strategy_id"],
            ["strategies.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("strategy_id", name="uix_strategy_parameters"),
    )
    op.create_table(
        "strategy_type_parameters",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("strategy_id", sa.Integer(), nullable=False),
        sa.Column("target_volume", sa.Numeric(precision=18, scale=8), nullable=True),
        sa.Column("min_depth", sa.Integer(), nullable=True),
        sa.Column("min_depth_percentage", sa.Numeric(precision=5, scale=2), nullable=True),
        sa.Column("parameters", sa.JSON(), nullable=True),
        sa.Column("created_at", sa.TIMESTAMP(), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=True),
        sa.Column("updated_at", sa.TIMESTAMP(), server_default=sa.text("CURRENT_TIMESTAMP"), nullable=True),
        sa.ForeignKeyConstraint(
            ["strategy_id"],
            ["strategies.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("strategy_id", name="uix_strategy_type_parameters"),
    )
    op.create_table(
        "trade_opportunities",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("strategy_id", sa.Integer(), nullable=False),
        sa.Column("trading_pair_id", sa.Integer(), nullable=False),
        sa.Column("buy_exchange_id", sa.Integer(), nullable=False),
        sa.Column("sell_exchange_id", sa.Integer(), nullable=False),
        sa.Column("buy_price", sa.Numeric(precision=18, scale=8), nullable=False),
        sa.Column("sell_price", sa.Numeric(precision=18, scale=8), nullable=False),
        sa.Column("spread", sa.Numeric(precision=18, scale=8), nullable=False),
        sa.Column("volume", sa.Numeric(precision=18, scale=8), nullable=False),
        sa.Column("opportunity_timestamp", sa.TIMESTAMP(), nullable=False),
        sa.ForeignKeyConstraint(
            ["buy_exchange_id"],
            ["exchanges.id"],
        ),
        sa.ForeignKeyConstraint(
            ["sell_exchange_id"],
            ["exchanges.id"],
        ),
        sa.ForeignKeyConstraint(
            ["strategy_id"],
            ["strategies.id"],
        ),
        sa.ForeignKeyConstraint(
            ["trading_pair_id"],
            ["trading_pairs.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "strategy_exchange_metrics",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("strategy_metrics_id", sa.Integer(), nullable=False),
        sa.Column("exchange_id", sa.Integer(), nullable=False),
        sa.Column("trade_count", sa.Integer(), server_default=sa.text("0"), nullable=False),
        sa.Column("net_profit", sa.Numeric(precision=18, scale=2), server_default=sa.text("0"), nullable=False),
        sa.Column("win_rate", sa.Numeric(precision=5, scale=2), server_default=sa.text("0"), nullable=False),
        sa.Column("created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=True),
        sa.ForeignKeyConstraint(
            ["exchange_id"],
            ["exchanges.id"],
        ),
        sa.ForeignKeyConstraint(
            ["strategy_metrics_id"],
            ["strategy_metrics.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "strategy_trading_pair_metrics",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("strategy_metrics_id", sa.Integer(), nullable=False),
        sa.Column("trading_pair_id", sa.Integer(), nullable=False),
        sa.Column("trade_count", sa.Integer(), server_default=sa.text("0"), nullable=False),
        sa.Column("net_profit", sa.Numeric(precision=18, scale=2), server_default=sa.text("0"), nullable=False),
        sa.Column("win_rate", sa.Numeric(precision=5, scale=2), server_default=sa.text("0"), nullable=False),
        sa.Column("created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=True),
        sa.ForeignKeyConstraint(
            ["strategy_metrics_id"],
            ["strategy_metrics.id"],
        ),
        sa.ForeignKeyConstraint(
            ["trading_pair_id"],
            ["trading_pairs.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "trade_executions",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("strategy_id", sa.Integer(), nullable=False),
        sa.Column("trading_pair_id", sa.Integer(), nullable=False),
        sa.Column("buy_exchange_id", sa.Integer(), nullable=False),
        sa.Column("sell_exchange_id", sa.Integer(), nullable=False),
        sa.Column("executed_buy_price", sa.Numeric(precision=18, scale=8), nullable=False),
        sa.Column("executed_sell_price", sa.Numeric(precision=18, scale=8), nullable=False),
        sa.Column("spread", sa.Numeric(precision=18, scale=8), nullable=False),
        sa.Column("volume", sa.Numeric(precision=18, scale=8), nullable=False),
        sa.Column("execution_timestamp", sa.TIMESTAMP(), nullable=False),
        sa.Column("execution_id", sa.String(), nullable=True),
        sa.Column("opportunity_id", sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(
            ["buy_exchange_id"],
            ["exchanges.id"],
        ),
        sa.ForeignKeyConstraint(
            ["opportunity_id"],
            ["trade_opportunities.id"],
        ),
        sa.ForeignKeyConstraint(
            ["sell_exchange_id"],
            ["exchanges.id"],
        ),
        sa.ForeignKeyConstraint(
            ["strategy_id"],
            ["strategies.id"],
        ),
        sa.ForeignKeyConstraint(
            ["trading_pair_id"],
            ["trading_pairs.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("trade_executions")
    op.drop_table("strategy_trading_pair_metrics")
    op.drop_table("strategy_exchange_metrics")
    op.drop_table("trade_opportunities")
    op.drop_table("strategy_type_parameters")
    op.drop_table("strategy_parameters")
    op.drop_table("strategy_metrics")
    op.drop_table("strategy_execution_mapping")
    op.drop_table("strategy_exchange_pair_mappings")
    op.drop_table("market_condition_performance")
    op.drop_table("strategies")
    op.drop_table("trading_pairs")
    op.drop_table("system_health_checks")
    op.drop_table("strategy_types")
    op.drop_table("risk_profiles")
    op.drop_table("order_book_snapshots")
    op.drop_table("execution_strategies")
    op.drop_table("exchanges")
    # ### end Alembic commands ###
